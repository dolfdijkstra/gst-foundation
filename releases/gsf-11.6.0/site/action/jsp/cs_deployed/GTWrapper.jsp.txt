<%@ page contentType="text/html; charset=UTF-8" language="java" 
%><%@ taglib prefix="cs" uri="futuretense_cs/ftcs1_0.tld"
%><%@ taglib prefix="asset" uri="futuretense_cs/asset.tld"
%><%@ taglib prefix="ics" uri="futuretense_cs/ics.tld"
%><%@ taglib prefix="render" uri="futuretense_cs/render.tld"
%><cs:ftcs><?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<%-- This page is an uncached wrapper page.  Its sole purpose is to
     perform logic that must always be performed on Content Server
     even in a fully cached environment.  This can include security
     checking, search processing, session management, and so-on.  
      
	 Note that the very first thing this page does is stream out the
	 xml document type declaration.  This is done because for thie
	 response to be valid XML, the declaration must be the very first
	 thing streamed.  Any extraneous whitespace can cause parsing 
	 problems.
	 
	 Now that the doc type declaration has been streamed, we must
	 record the calling SiteEntry and this CSElement assets as
	 compositional dependencies.  This wrapper is always the top-most 
	 page, and it is always uncached, so strictly speaking it is not
	 necessary to record these dependencies, but they are done here 
	 for completeness. --%>
<ics:if condition='<%=ics.GetVar("seid")!=null%>'><ics:then><render:logdep cid='<%=ics.GetVar("seid")%>' c="SiteEntry"/></ics:then></ics:if>
<ics:if condition='<%=ics.GetVar("eid")!=null%>'><ics:then><render:logdep cid='<%=ics.GetVar("eid")%>' c="CSElement"/></ics:then></ics:if>
<%-- The variable p refers to the page upon which the content currently being
     rendered is placed.  The variable is used to render certain parts of the
	 page. --%>
<ics:if condition='<%=ics.GetVar("p") == null%>'>
<ics:then>
	<ics:if condition='<%="Page".equals(ics.GetVar("c"))%>'>
	<ics:then>
		<%-- the asset being rendered is a page.  Use its id. --%>
		<ics:setvar name="p" value='<%=ics.GetVar("cid")%>'/>
	</ics:then>
	<ics:else>
        <ics:logmsg name="com.fatwire.logging.cs.firstsite" severity="warn" msg="Required variable 'p' is missing"/>
	</ics:else>
	</ics:if>
</ics:then>
</ics:if>

<%-- Now, let's handle form processing code.  The structure of form processing
     code is really straight-forward.  If a variable called "form-to-process" is 
     present, we look up the reference to that entry and then call the 
     referenced element here.  
       
     So look up the variable.
	   
     When we look up the variable, it may be a regular parameter, or it may be 
     embedded in packedargs.  First check packedargs to see if it's there, and 
     if it is, extract it.  --%>
<ics:if condition='<%=ics.GetVar("packedargs") != null%>'>
<ics:then>
	<render:unpackarg unpack="form-to-process" remove="true" packed='<%=ics.GetVar("packedargs")%>' outvar="packedargs"/>
</ics:then>
</ics:if>
<%-- If form-to-process is there, process it --%>
<ics:if condition='<%=ics.GetVar("form-to-process") != null%>'>
<ics:then>
    <render:lookup site='<%=ics.GetVar("site")%>' varname="formProcessingCSElement" key='<%=ics.GetVar("form-to-process")%>' ttype="CSElement" tid='<%=ics.GetVar("eid")%>' match=":x"/>
<%-- If there was a reference by that name, we will have a lookup variable.  
     call the element with global scope and then continue processing.  
       
     Form processing in this location will result in output being streamed
     above the rest of the site.  Ideally, form-processing pages should be
     very careful what they stream.  In order to prevent extraneous content
     from landing on the browser's pages, we wrap the output in an xml
     comment.  This is not guaranteed to work but it is a helpful
     safety feature.

     It should be noted though, that form processing need not occur only in
     this location.  Fors can be processed inside any uncached pagelet,
     provided that Satellite Server is used and the form method is POST.
     This is possible because Satellite Server will send all of the posted
     parameters to any uncached pagelet, regardless of the page criteria or
     current variable scope.  
    
     Therefore, this form processing location is useful for back-end state
     changes, whereas the nested pagelet approach may be more useful for
     rendering searches and so-on. --%>
    <ics:if condition='<%=ics.GetVar("formProcessingCSElement")!=null%>'>
    <ics:then>
		<ics:logmsg name="com.fatwire.logging.cs.firstsite" severity="info" msg='<%="Wrapper processing form "+ics.GetVar("form-to-process")+" using element "+ics.GetVar("formProcessingCSElement")%>'/>
    	<render:callelement elementname='<%=ics.GetVar("formProcessingCSElement")%>' scoped="global"/>
		<ics:logmsg name="com.fatwire.logging.cs.firstsite" severity="debug" msg="...form processing complete"/>
    </ics:then>
    </ics:if>
</ics:then>
</ics:if>


<%-- The session variable locale refers to the id of the dimension with the
     subtype of Locale that specifies which language the site is to be rendered
     in.  Users can select the locale of their choice from a menu on every page
     of the site, and once selected, it is stored in session.  A default locale
     is mapped to this CSElement and is set if it has not already been set.
     --%>
<ics:if condition='<%=ics.GetSSVar("preferred_locale") == null%>'>
    <ics:then>
        <render:lookup site='<%=ics.GetVar("site")%>' varname="default:locale:name" key='DefaultLocale' ttype="CSElement" tid='<%=ics.GetVar("eid")%>' match=":x"/>
        <asset:load name="defaultLocale" type="Dimension" field="name" value='<%=ics.GetVar("default:locale:name")%>'/>
        <asset:get name="defaultLocale" field="id" output="default:locale:id"/>
        <ics:setssvar name="preferred_locale" value='<%=ics.GetVar("default:locale:id")%>'/>
    </ics:then>
</ics:if>


<%-- Call the wrapped child page.  There is no need to look up the template or
     to enable any special PageBuilder functionality, so we can use the 
     render:satellitepage tag in this situation. --%>
<render:satellitepage pagename='<%=ics.GetVar("childpagename")%>' packedargs='<%=ics.GetVar("packedargs")%>'>
      <render:argument name='c' value='<%=ics.GetVar("c")%>'/>
      <render:argument name='cid' value='<%=ics.GetVar("cid")%>'/>
      <render:argument name='p' value='<%=ics.GetVar("p")%>' />
      <render:argument name="locale" value='<%=ics.GetSSVar("preferred_locale")%>'/>
</render:satellitepage>


<%-- 
	Analytics Image tag 
	Data capture code for asset uses and user information
--%>
		<ics:if condition='<%="true".equalsIgnoreCase(ics.GetProperty("analytics.enabled", "futuretense_xcel.ini", true))%>'>
            <ics:then>
                <ics:if condition='<%=ics.GetVar("packedargs") != null%>'>
                    <ics:then>
						<render:unpackarg unpack="recid" remove="true" packed='<%=ics.GetVar("packedargs")%>' outvar="packedargs"/>
					</ics:then>
				</ics:if>
                <render:callelement elementname="Analytics/AddAnalyticsImgTag">
				<render:argument name="c" value='<%=ics.GetVar("c")%>'/>
				<render:argument name="cid" value='<%=ics.GetVar("cid")%>'/>
				<render:argument name="site" value='<%=ics.GetVar("site")%>'/>
				<render:argument name="pagename" value='<%=ics.GetVar("childpagename")%>'/>
                <render:argument name="recid" value='<%=ics.GetVar("recid")%>'/>
				</render:callelement>
			</ics:then>                               
		</ics:if>
</html>
</cs:ftcs>